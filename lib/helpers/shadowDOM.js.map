{"version":3,"sources":["../../src/helpers/shadowDOM.js"],"names":["element","props","applyStylesheet","classNameID","style","document","querySelector","split","styleTag","innerHTML","e","appendChild","cloneNode","state","stylesheet","n","React","createElement","generatedClassName","PureComponent"],"mappings":";;gDAAQ,a;;wEAAA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAKO,UAACA,OAAD,EAAa;;AAE1B;AAAA;;AACE,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,cAOnBC,eAPmB,GAOD,UAACC,WAAD,EAAiB;AACjC,cAAIC,QAAQC,SAASC,aAAT,CAAuB,oBAAvB,CAAZ;;AAEA,cAAI,CAACF,KAAL,EAAY;AACVA,oBAAQC,SAASC,aAAT,oCAAwDH,YAAYI,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAxD,OAAR;AACD;;AAED,cAAI,CAACH,KAAL,EAAY;;AAEZ,cAAI;AACF,kBAAKI,QAAL,CAAcC,SAAd,GAA0B,EAA1B;AACD,WAFD,CAEE,OAAMC,CAAN,EAAS,CAAE;AACb,gBAAKF,QAAL,CAAcG,WAAd,CAA0BP,MAAMQ,SAAN,CAAgB,IAAhB,CAA1B;AACD,SApBkB;;AAEjB,cAAKC,KAAL,GAAa;AACXC,sBAAY;AADD,SAAb;AAFiB;AAKlB;;AANH;AAAA;AAAA,iCAuBW;AAAA;;AAAA,cACCA,UADD,GACgB,KAAKD,KADrB,CACCC,UADD;;AAEP,iBACE;AAAC,iCAAD;AAAA;AACE;AAAA;AAAA;AACE,sDAAM,KAAK,aAACC,CAAD;AAAA,yBAAO,OAAKP,QAAL,GAAgBO,CAAvB;AAAA,iBAAX,GADF;AAEGC,8BAAMC,aAAN,CAAoBjB,OAApB,eAAiC,KAAKC,KAAtC,IAA6CiB,oBAAoB,KAAKhB,eAAtE;AAFH;AADF,WADF;AAQD;AAjCH;;AAAA;AAAA,MAAqCc,gBAAMG,aAA3C;AAmCD,G","file":"shadowDOM.js","sourcesContent":["require('../polyfill')\n\nimport React from 'react'\nimport ShadowDOM from 'react-shadow'\n\nexport default (element) => {\n\n  return class ShadowDOMHelper extends React.PureComponent {\n    constructor(props) {\n      super(props)\n      this.state = {\n        stylesheet: false\n      }\n    }\n\n    applyStylesheet = (classNameID) => {\n      let style = document.querySelector('style[data-styled]');\n\n      if (!style) {\n        style = document.querySelector(`style[data-styled-components*=${classNameID.split(' ')[1]}]`);\n      }\n\n      if (!style) return;\n\n      try {\n        this.styleTag.innerHTML = '';\n      } catch(e) {}\n      this.styleTag.appendChild(style.cloneNode(true));\n    }\n\n    render() {\n      const { stylesheet } = this.state\n      return (\n        <ShadowDOM>\n          <span>\n            <span ref={(n) => this.styleTag = n} />\n            {React.createElement(element, {...this.props, generatedClassName: this.applyStylesheet})}\n          </span>\n        </ShadowDOM>\n      )\n    }\n  }\n}\n"]}